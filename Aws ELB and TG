provider "aws" {
  region     = "ap-south-1"
}

data "aws_vpc" "default" {
  default = true
}

data "aws_subnet" "ap-south-1a_subnets" {
  vpc_id = data.aws_vpc.default.id

  tags = {
    az = "ap-south-1a"
  }
}

data "aws_subnet" "ap-south-1b_subnets" {
  vpc_id = data.aws_vpc.default.id

  tags = {
    az = "ap-south-1b"
  }
}

resource "aws_lb_target_group" "my_target_group" {
  name        = "my-target-group"
  port        = 80
  protocol    = "HTTP"
  target_type = "instance"
  vpc_id      = data.aws_vpc.default.id

  health_check {
    enabled             = true
    interval            = 30
    path                = "/"
    protocol            = "HTTP"
    timeout             = 10
    healthy_threshold   = 5
    unhealthy_threshold = 5
  }

  stickiness {
    type            = "lb_cookie"
    cookie_duration = 300
  }

  tags = {
    Name = "MyTargetGroup"
  }
}

resource "aws_security_group" "alb_sg" {
  name        = "alb_sg"
  description = "Allow inbound HTTP and HTTPS traffic"

  vpc_id = data.aws_vpc.default.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_lb" "my_alb" {
  name               = "my-alb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.alb_sg.id]
  subnets = concat(
    data.aws_subnet.ap-south-1a_subnets[*].id,
    data.aws_subnet.ap-south-1b_subnets[*].id
  )

  enable_deletion_protection = false # Change to true to enable deletion protection
}

resource "aws_lb_listener" "http_listener" {
  load_balancer_arn = aws_lb.my_alb.arn
  port              = "80"
  protocol          = "HTTP"
  default_action {
    type             = "redirect"
    redirect {
      protocol    = "HTTPS"
      port        = "443"
      status_code = "HTTP_301"
    }
  }
}

 resource "aws_lb_listener" "https_listener" {
  load_balancer_arn = aws_lb.my_alb.arn
  port              = "443"
  protocol          = "HTTPS"
  ssl_policy        = "ELBSecurityPolicy-TLS13-1-2-2021-06"  // You may adjust the SSL policy according to your requirements
  certificate_arn   = data.aws_acm_certificate.cert.arn
  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.my_target_group.arn
  }
}

data "aws_acm_certificate" "cert" {
  domain   = "example.com" // Replace with your actual domain
  statuses = ["ISSUED"]
}


output "alb_dns_name" {
  value = aws_lb.my_alb.dns_name
}
