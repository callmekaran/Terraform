name: CI/CD Workflow

on:
  push:
    branches:
      - VPC-Peering

jobs:
  analyze:
    name: Build & Analyze Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full clone ensures complete analysis

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Verify SonarQube Quality Gate
        id: quality-gate
        run: |
          echo "Retrieving SonarQube Quality Gate status..."
          QUALITY_STATUS=$(curl -s -X GET -H "Authorization: Bearer $SONAR_TOKEN" "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=my-Java-web-app" | jq -r '.projectStatus.status')
          echo "Current Quality Gate Status: $QUALITY_STATUS"
          if [ "$QUALITY_STATUS" != "OK" ]; then
            echo "Quality Gate failed. Please address the issues."
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  deploy:
    name: Deploy to Staging
    runs-on: staging-terraform
    needs: analyze

    steps:
      - name: Synchronize Codebase
        run: |
          cd /home/ubuntu/terraform/
          echo "Synchronizing with the main branch..."
          git fetch --all
          git pull origin main
          echo "Code synchronized."

      - name: Apply Terraform Configuration
        run: |
          cd /home/ubuntu/terraform/
          terraform init
          terraform fmt
          terraform validate
          terraform plan
          terraform apply

  notify:
    name: Notify on Google Chat
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ always() }}

    steps:
      - name: Send Deployment Notification
        uses: SimonScholz/google-chat-action@main
        with:
          webhookUrl: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          jobStatus: ${{ job.status }}
