# For API Connection

provider "aws" {
  region     = "ap-south-1"
}

resource "aws_instance" "test" {
  ami                    = "ami-03d3eec31be6ef6f9"
  instance_type          = "t2.large"
  key_name               = "deployer-key"
  availability_zone   =    "ap-south-1b"
# count                  = 1
# vpc_security_group_ids = ["sg-0b359405ec38b2082"]
  vpc_security_group_ids = ["aws_security_group.test-server-sg.id"]
# user_data = file("/home/ubuntu/install-apache2-script.sh")
  tags = {
    Name = "Test"
  }
  
It will Create Root Volume

  root_block_device {
    delete_on_termination = true
    iops = 150
    volume_size = 50
    volume_type = "gp2"
}
}

# it will create Extra ebs volume

resource "aws_ebs_volume" "example" {
  availability_zone = "ap-south-1b"
  size              = 40
  type              = "gp3"

  tags = {
    Name = "HelloWorld"
  }
}

it will attach Extra Volume to instance

resource "aws_volume_attachment" "ebs_att" {
  volume_id   = aws_ebs_volume.example.id
  instance_id = aws_instance.test.id
  device_name = "/dev/sdd"
}

#How to create key in aws via terraform

#ssh-keygen -t rsa
#Enter in which file to save: ./keyname


resource "aws_key_pair" "deployer" {
  key_name   = "deployer-key"
  public_key = file("/home/discusit/terraform/mykey.pub")
}

#Create Security Group

resource "aws_security_group" "test-server-sg" {
  name        = "test-server-sg"
  description = "Allow inbound and outbound traffic"
  vpc_id      = aws_vpc.main.id

  ingress {
    description      = "SSH from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "ssh"
    cidr_blocks      = ["myip"]
  }

#FROMPORT_TOPORT 0to0 means ALL, same with -1 mean ALL Protocol

  egress {
    description      = "All Port ALLOW"
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}


